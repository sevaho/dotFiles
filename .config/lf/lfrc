#############################
#      ___      _______     #
#     |   |    |       |    #
#     |   |    |    ___|    #
#     |   |    |   |___     #
#     |   |___ |    ___|    #
#     |       ||   |        #
#     |_______||___|        #
#                           #
#############################

# https://github.com/gokcehan/lf/wiki/Tutorial
# ---------------------------
#  Settings
# ---------------------------

set shell sh

set shellopts '-eu'
set ifs "\n"

set color256 on

set dircounts on
set dirfirst on

# set drawbox on

set scrolloff 5

set previewer ~/.config/lf/pv.sh

# ---------------------------
# 
# ---------------------------

# ---------------------------
#  Commands
# ---------------------------

cmd trash &trash-put $fx

cmd go-symlink %cd $(readlink "$fx")

cmd usage $du -h -d1 | less

cmd mkdir %mkdir -p "$@"

cmd yank_path &echo -n $f | xsel -ipb

cmd yank_name &basename $f | xsel -ipb

# rename current file without overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

# Get progress of copynig
cmd paste &{{
    load=$(lf -remote 'load')
    mode=$(echo "$load" | sed -n '1p')
    list=$(echo "$load" | sed '1d')
    if [ $mode = 'copy' ]; then
        rsync -av --ignore-existing --progress $list . \
        | stdbuf -i0 -o0 -e0 tr '\r' '\n' \
        | while read line; do
            lf -remote "send $id echo $line"
        done
    elif [ $mode = 'move' ]; then
        mv -n $list .
    fi
    lf -remote 'send load'
    lf -remote 'send clear'
}}

cmd paste_overwrite %{{
    load=$(lf -remote 'load')
    mode=$(echo "$load" | sed -n '1p')
    list=$(echo "$load" | sed '1d')
    if [ $mode = 'copy' ]; then
        cp -Rf $list .
    elif [ $mode = 'move' ]; then
        mv $list .
    fi
    lf -remote 'send load'
    lf -remote 'send clear'
}}

cmd paste_symlink %{{
    load=$(lf -remote 'load')
    list=$(echo "$load" | sed '1d')
    ln -s $list .
    lf -remote 'send load'
    lf -remote 'send clear'
}}

cmd delete ${{
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/n]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *zip) atool --list -- $f | less;;
        *pdf) zathura $f;;
        *tar) atool --list -- $f | less;;
        *compressed) atool --list -- $f | less;;
        *) xdg-open $fx;;
    esac
}}

cmd convert ${{
    set -f
    case $f in
        *.ipynb) convert-scripts "$f";;
    esac
}}

# extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar) tar xvf $f;;
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd images ${{
    sxiv -t *
}}

cmd git ${{
    git status | less
}}

cmd bulk-rename ${{
	index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
	if [ -n "${fs}" ]; then
		echo "$fs" > $index
	else
		echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
	fi
	index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
	cat $index > $index_edit
	$EDITOR $index_edit
	if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
		max=$(($(cat $index | wc -l)+1))
		counter=1
		while [ $counter -le $max ]; do
			a="$(cat $index | sed "${counter}q;d")"
			b="$(cat $index_edit | sed "${counter}q;d")"
			counter=$(($counter+1))

			[ "$a" = "$b" ] && continue
			[ -e "$b" ] && echo "File exists: $b" && continue
			mv "$a" "$b"
		done
	else
		echo "Number of lines must stay the same"
	fi
	rm $index $index_edit
}}

# ---------------------------
#  --------------------------

#  --------------------------
#  mapping
# ---------------------------

# Unmappings
map d
map y
map p

map <bs2> :set hidden!

map m push :mkdir<space>
map M mark-save

map <enter> shell

map P :set preview!
# map i $~/.config/lf/pv.sh $f | less -R
map i images

map S $$SHELL

# Delete
map dD delete
map dd cut
map D delete

# Copy
map yy copy
map yn yank_name
map yp yank_path

# Paste
map pp paste
map po paste_overwrite
map pa paste_append
map pl paste_symlink


# execute current file (must be executable)
map x $$f
map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

# FuzzyFind
map f $vi $(fzf)
map F $lf -remote "send $id select '$(fzf)'"

# Usage
map U usage

map r push :rename<space>

map V push !nvim<space>

map br bulk-rename

# Movements
# map gL go-symlink
map gL cd $(readlink $f)
# map gG $lf -remote "send $id cd $GOPATH"

map gGs git

map ge cd /etc
map gu cd /usr
map gM cd /mnt
map gr cd /
map gR cd /run/media/lander
map gP cd /run/media/lander/
map gt cd ~/.local/share/Trash/files/
map gT cd ~/.local/share/Trash/

map gh cd ~
map gs cd ~/Share
map gd cd ~/Downloads
map gp cd ~/Pictures
map gv cd ~/Videos

map gw cd ~/Documents/Work/WeGroup
map gV cd ~/Documents/VEST

# map gh
# map ghh cd ~/Documents/Howest/3NMCT/S6
# map ghs cd ~/Documents/Howest/3NMCT/S6/Stage
# map ghb cd ~/Documents/Howest/3NMCT/S6/Bachelorproef

# ---------------------------
#  -------------------------
